<?xml version="1.0"?>
<launch>

<!-- Launch robot -->
<!-- Use group tag to specify the namespace of the robot to avoid the  occupation of the root topic /joint_states -->
<group ns="ur5_robot">
    <!-- Set the robot IP address and calibration file-->
    <arg name="robot_ip" default="169.254.120.2" doc="IP address by which the robot can be reached."/>
    <arg name="kinematics_config" default="$(find ur5_robot)/config/my_robot_calibration.yaml" doc="Kinematics config file used for calibration correction. This will be used to verify the robot's calibration is matching the robot_description."/>
    <include file="$(find ur_robot_driver)/launch/ur5_bringup.launch">
    <arg name="robot_ip" value="$(arg robot_ip)"/>
    <arg name="kinematics_config" value="$(arg kinematics_config)"/>
    </include>
</group>

<!-- Launch MoveIt -->
<arg name="load_robot_description" default="true"/>
<!-- By default, we are not in debug mode -->
<arg name="debug" default="false" />
<arg name="moveit_controller_manager" value="ros_control" />
<!-- Set execution mode for fake execution controllers -->
<arg name="fake_execution_type" default="interpolate" />
<arg name="pipeline" default="ompl" />
<!-- Load the move_group node -->
<include file="$(find ur5_gripper_moveit)/launch/move_group.launch">
<arg name="allow_trajectory_execution" value="true"/>
<arg name="moveit_controller_manager" value="$(arg moveit_controller_manager)" />
<arg name="fake_execution_type" value="$(arg fake_execution_type)"/>
<arg name="info" value="true"/>
<arg name="debug" value="$(arg debug)"/>
<arg name="pipeline" value="$(arg pipeline)"/>
<arg name="load_robot_description" value="$(arg load_robot_description)"/>
</include>

<!-- Start Robotiq controller -->
<arg name="device_name" default="/dev/ttyUSB0"/>
<node name="robotiq_2f_gripper_driver_node" pkg="robotiq_2f_gripper_control" type="Robotiq2FGripperRtuNode.py" output="screen" args="$(arg device_name)" />
<!-- Create a fake joint_states publisher for the gripper -->
<node name="robotiq_2f_gripper_joint_publisher" pkg="robotiq_gripper" type="gripper_joint_state_publisher.py" output="screen" args="$(arg device_name)" />

<!-- Start joint state publisher (merge joint states from two sources: robot and gripper) -->
<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" output="screen">
<rosparam param="source_list">["/ur5_robot/joint_states","/gripper/joint_states"]</rosparam>
</node>

<!-- Start RViz for visualization -->
<arg name="use_rviz" default="true" />
<!-- Run Rviz and load the default config to see the state of the move_group node -->
<include file="$(find ur5_gripper_moveit)/launch/moveit_rviz.launch" if="$(arg use_rviz)">
<arg name="rviz_config" value="$(find ur5_robot_gripper)/config/view.rviz"/>
<arg name="debug" value="$(arg debug)"/>
</include>
<!-- Set Moveit Scenes -->
<node name="set_moveit_scenes" pkg="ur5_robot_gripper" type="moveit_scene.py" output="screen"/>

</launch>